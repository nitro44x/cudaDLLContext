var annotated_dup =
[
    [ "CLI", null, [
      [ "detail", null, [
        [ "AppFriend", "structCLI_1_1detail_1_1AppFriend.html", null ],
        [ "element_type", "structCLI_1_1detail_1_1element__type.html", "structCLI_1_1detail_1_1element__type" ],
        [ "element_type< T, typename std::enable_if< is_copyable_ptr< T >::value >::type >", "structCLI_1_1detail_1_1element__type_3_01T_00_01typename_01std_1_1enable__if_3_01is__copyable__p095259d742d782941ef6a8bf79b7548e.html", "structCLI_1_1detail_1_1element__type_3_01T_00_01typename_01std_1_1enable__if_3_01is__copyable__p095259d742d782941ef6a8bf79b7548e" ],
        [ "element_value_type", "structCLI_1_1detail_1_1element__value__type.html", "structCLI_1_1detail_1_1element__value__type" ],
        [ "ExistingDirectoryValidator", "classCLI_1_1detail_1_1ExistingDirectoryValidator.html", "classCLI_1_1detail_1_1ExistingDirectoryValidator" ],
        [ "ExistingFileValidator", "classCLI_1_1detail_1_1ExistingFileValidator.html", "classCLI_1_1detail_1_1ExistingFileValidator" ],
        [ "ExistingPathValidator", "classCLI_1_1detail_1_1ExistingPathValidator.html", "classCLI_1_1detail_1_1ExistingPathValidator" ],
        [ "has_find", "structCLI_1_1detail_1_1has__find.html", "structCLI_1_1detail_1_1has__find" ],
        [ "IPV4Validator", "classCLI_1_1detail_1_1IPV4Validator.html", "classCLI_1_1detail_1_1IPV4Validator" ],
        [ "is_complex", "classCLI_1_1detail_1_1is__complex.html", null ],
        [ "is_direct_constructible", "classCLI_1_1detail_1_1is__direct__constructible.html", null ],
        [ "is_istreamable", "classCLI_1_1detail_1_1is__istreamable.html", null ],
        [ "is_mutable_container", "structCLI_1_1detail_1_1is__mutable__container.html", null ],
        [ "is_mutable_container< T, conditional_t< false, void_t< typename T::value_type, decltype(std::declval< T >().end()), decltype(std::declval< T >().clear()), decltype(std::declval< T >().insert(std::declval< decltype(std::declval< T >().end())>(), std::declval< const typename T::value_type & >()))>, void > >", "structCLI_1_1detail_1_1is__mutable__container_3_01T_00_01conditional__t_3_01false_00_01void__t_34f912c4cf53fe26abfba2fd2b47c408d.html", null ],
        [ "is_ostreamable", "classCLI_1_1detail_1_1is__ostreamable.html", null ],
        [ "is_readable_container", "structCLI_1_1detail_1_1is__readable__container.html", null ],
        [ "is_readable_container< T, conditional_t< false, void_t< decltype(std::declval< T >().end()), decltype(std::declval< T >().begin())>, void > >", "structCLI_1_1detail_1_1is__readable__container_3_01T_00_01conditional__t_3_01false_00_01void__t_a11f17935a0aadb8dce82cbccb9f2c68.html", null ],
        [ "is_tuple_like", "classCLI_1_1detail_1_1is__tuple__like.html", null ],
        [ "is_wrapper", "structCLI_1_1detail_1_1is__wrapper.html", null ],
        [ "is_wrapper< T, conditional_t< false, void_t< typename T::value_type >, void > >", "structCLI_1_1detail_1_1is__wrapper_3_01T_00_01conditional__t_3_01false_00_01void__t_3_01typename64a0c6feb904f77c98810c843e4d2f1f.html", null ],
        [ "NonexistentPathValidator", "classCLI_1_1detail_1_1NonexistentPathValidator.html", "classCLI_1_1detail_1_1NonexistentPathValidator" ],
        [ "pair_adaptor", "structCLI_1_1detail_1_1pair__adaptor.html", "structCLI_1_1detail_1_1pair__adaptor" ],
        [ "pair_adaptor< T, conditional_t< false, void_t< typename T::value_type::first_type, typename T::value_type::second_type >, void > >", "structCLI_1_1detail_1_1pair__adaptor_3_01T_00_01conditional__t_3_01false_00_01void__t_3_01typenac7f3d35561ff46242630d08443185a90.html", "structCLI_1_1detail_1_1pair__adaptor_3_01T_00_01conditional__t_3_01false_00_01void__t_3_01typenac7f3d35561ff46242630d08443185a90" ],
        [ "subtype_count", "structCLI_1_1detail_1_1subtype__count.html", null ],
        [ "subtype_count_min", "structCLI_1_1detail_1_1subtype__count__min.html", null ],
        [ "type_count", "structCLI_1_1detail_1_1type__count.html", null ],
        [ "type_count< T, typename std::enable_if< !is_wrapper< T >::value &&!is_tuple_like< T >::value &&!is_complex< T >::value &&!std::is_void< T >::value >::type >", "structCLI_1_1detail_1_1type__count_3_01T_00_01typename_01std_1_1enable__if_3_01_9is__wrapper_3_04fe0bc8ebafb67fb951a0e1779deb515.html", null ],
        [ "type_count< T, typename std::enable_if< is_complex< T >::value >::type >", "structCLI_1_1detail_1_1type__count_3_01T_00_01typename_01std_1_1enable__if_3_01is__complex_3_01Tcc27862bfce937e7a184d4899b689962.html", null ],
        [ "type_count< T, typename std::enable_if< is_mutable_container< T >::value >::type >", "structCLI_1_1detail_1_1type__count_3_01T_00_01typename_01std_1_1enable__if_3_01is__mutable__contb2a5be46bc2085412bb046a9416235bc.html", null ],
        [ "type_count< T, typename std::enable_if< is_wrapper< T >::value &&!is_complex< T >::value &&!is_tuple_like< T >::value &&!is_mutable_container< T >::value >::type >", "structCLI_1_1detail_1_1type__count_3_01T_00_01typename_01std_1_1enable__if_3_01is__wrapper_3_01Tafeacc1b065a285344dc61402947bdc3.html", null ],
        [ "type_count_base", "structCLI_1_1detail_1_1type__count__base.html", null ],
        [ "type_count_base< T, typename std::enable_if< is_mutable_container< T >::value >::type >", "structCLI_1_1detail_1_1type__count__base_3_01T_00_01typename_01std_1_1enable__if_3_01is__mutablea4c3104627fe84803e06115cc7149e3c.html", null ],
        [ "type_count_base< T, typename std::enable_if< is_tuple_like< T >::value &&!is_mutable_container< T >::value >::type >", "structCLI_1_1detail_1_1type__count__base_3_01T_00_01typename_01std_1_1enable__if_3_01is__tuple__95c1a0ec6f7c1496130700c874085e8b.html", null ],
        [ "type_count_base< T, typename std::enable_if<!is_tuple_like< T >::value &&!is_mutable_container< T >::value &&!std::is_void< T >::value >::type >", "structCLI_1_1detail_1_1type__count__base_3_01T_00_01typename_01std_1_1enable__if_3_9is__tuple__l80d36c9114ac17288799bef466c7bc7c.html", null ],
        [ "wrapped_type", "structCLI_1_1detail_1_1wrapped__type.html", "structCLI_1_1detail_1_1wrapped__type" ],
        [ "wrapped_type< T, def, typename std::enable_if< is_wrapper< T >::value >::type >", "structCLI_1_1detail_1_1wrapped__type_3_01T_00_01def_00_01typename_01std_1_1enable__if_3_01is__wr7fdd281434af22fc0a3e380b9a3bffc8.html", "structCLI_1_1detail_1_1wrapped__type_3_01T_00_01def_00_01typename_01std_1_1enable__if_3_01is__wr7fdd281434af22fc0a3e380b9a3bffc8" ]
      ] ],
      [ "App", "classCLI_1_1App.html", "classCLI_1_1App" ],
      [ "ArgumentMismatch", "classCLI_1_1ArgumentMismatch.html", null ],
      [ "AsNumberWithUnit", "classCLI_1_1AsNumberWithUnit.html", "classCLI_1_1AsNumberWithUnit" ],
      [ "AsSizeValue", "classCLI_1_1AsSizeValue.html", "classCLI_1_1AsSizeValue" ],
      [ "BadNameString", "classCLI_1_1BadNameString.html", null ],
      [ "Bound", "classCLI_1_1Bound.html", "classCLI_1_1Bound" ],
      [ "CallForAllHelp", "classCLI_1_1CallForAllHelp.html", null ],
      [ "CallForHelp", "classCLI_1_1CallForHelp.html", null ],
      [ "CallForVersion", "classCLI_1_1CallForVersion.html", null ],
      [ "CheckedTransformer", "classCLI_1_1CheckedTransformer.html", "classCLI_1_1CheckedTransformer" ],
      [ "Config", "classCLI_1_1Config.html", "classCLI_1_1Config" ],
      [ "ConfigBase", "classCLI_1_1ConfigBase.html", "classCLI_1_1ConfigBase" ],
      [ "ConfigError", "classCLI_1_1ConfigError.html", null ],
      [ "ConfigINI", "classCLI_1_1ConfigINI.html", "classCLI_1_1ConfigINI" ],
      [ "ConfigItem", "structCLI_1_1ConfigItem.html", "structCLI_1_1ConfigItem" ],
      [ "ConstructionError", "classCLI_1_1ConstructionError.html", null ],
      [ "ConversionError", "classCLI_1_1ConversionError.html", null ],
      [ "CustomValidator", "classCLI_1_1CustomValidator.html", null ],
      [ "Error", "classCLI_1_1Error.html", "classCLI_1_1Error" ],
      [ "ExcludesError", "classCLI_1_1ExcludesError.html", null ],
      [ "ExtrasError", "classCLI_1_1ExtrasError.html", null ],
      [ "FileError", "classCLI_1_1FileError.html", null ],
      [ "Formatter", "classCLI_1_1Formatter.html", "classCLI_1_1Formatter" ],
      [ "FormatterBase", "classCLI_1_1FormatterBase.html", "classCLI_1_1FormatterBase" ],
      [ "FormatterLambda", "classCLI_1_1FormatterLambda.html", "classCLI_1_1FormatterLambda" ],
      [ "HorribleError", "classCLI_1_1HorribleError.html", null ],
      [ "IncorrectConstruction", "classCLI_1_1IncorrectConstruction.html", null ],
      [ "InvalidError", "classCLI_1_1InvalidError.html", null ],
      [ "is_bool", "structCLI_1_1is__bool.html", null ],
      [ "is_bool< bool >", "structCLI_1_1is__bool_3_01bool_01_4.html", null ],
      [ "is_copyable_ptr", "structCLI_1_1is__copyable__ptr.html", null ],
      [ "is_shared_ptr", "structCLI_1_1is__shared__ptr.html", null ],
      [ "is_shared_ptr< const std::shared_ptr< T > >", "structCLI_1_1is__shared__ptr_3_01const_01std_1_1shared__ptr_3_01T_01_4_01_4.html", null ],
      [ "is_shared_ptr< std::shared_ptr< T > >", "structCLI_1_1is__shared__ptr_3_01std_1_1shared__ptr_3_01T_01_4_01_4.html", null ],
      [ "IsMember", "classCLI_1_1IsMember.html", "classCLI_1_1IsMember" ],
      [ "IsMemberType", "structCLI_1_1IsMemberType.html", "structCLI_1_1IsMemberType" ],
      [ "IsMemberType< const char * >", "structCLI_1_1IsMemberType_3_01const_01char_01_5_01_4.html", "structCLI_1_1IsMemberType_3_01const_01char_01_5_01_4" ],
      [ "make_void", "structCLI_1_1make__void.html", "structCLI_1_1make__void" ],
      [ "Option", "classCLI_1_1Option.html", "classCLI_1_1Option" ],
      [ "Option_group", "classCLI_1_1Option__group.html", "classCLI_1_1Option__group" ],
      [ "OptionAlreadyAdded", "classCLI_1_1OptionAlreadyAdded.html", null ],
      [ "OptionBase", "classCLI_1_1OptionBase.html", "classCLI_1_1OptionBase" ],
      [ "OptionDefaults", "classCLI_1_1OptionDefaults.html", "classCLI_1_1OptionDefaults" ],
      [ "OptionNotFound", "classCLI_1_1OptionNotFound.html", null ],
      [ "ParseError", "classCLI_1_1ParseError.html", null ],
      [ "Range", "classCLI_1_1Range.html", "classCLI_1_1Range" ],
      [ "RequiredError", "classCLI_1_1RequiredError.html", null ],
      [ "RequiresError", "classCLI_1_1RequiresError.html", null ],
      [ "RuntimeError", "classCLI_1_1RuntimeError.html", null ],
      [ "Success", "classCLI_1_1Success.html", null ],
      [ "Transformer", "classCLI_1_1Transformer.html", "classCLI_1_1Transformer" ],
      [ "TypeValidator", "classCLI_1_1TypeValidator.html", "classCLI_1_1TypeValidator" ],
      [ "ValidationError", "classCLI_1_1ValidationError.html", null ],
      [ "Validator", "classCLI_1_1Validator.html", "classCLI_1_1Validator" ]
    ] ],
    [ "Array", "classArray.html", "classArray" ],
    [ "InputParams", "structInputParams.html", "structInputParams" ],
    [ "Params", "structParams.html", "structParams" ],
    [ "testDriver", "structtestDriver.html", null ]
];